package com.hy.basejava.process;

import java.io.IOException;

/**
* Description: 模拟进度条打印
* @createDate: 2023/6/26 14:01
* @author haoyong
* @lastModifyBy haoyong
*/
public class Processing {

    public static void main(String[] args) throws InterruptedException {
//        printChinese();

//            printProcessingLine();
            printProcessingLine2();
//        printChinese();
    }

    /**
     * 利用\r回到行首 打印0-100进度条
     * @throws InterruptedException
     */
    public static void printProcessingLine() throws InterruptedException {
        for (int i = 0; i < 100; i++) {
            System.out.print("\r");
            System.out.print("进度:"+(i+1)+"%[");
            for (int j = 0; j <= i ; j++) {
                System.out.print(">");
            }
            for (int j = 1; j < (100-i); j++) {
                System.out.print("-");
            }
            System.out.print("]");
            Thread.sleep(100l);

        }
    }

    public static void printProcessingLine2() throws InterruptedException {
        // print process line ahead then use \b remove the symbol
        System.out.print("[");
        for (int i = 0; i < 100; i++) {
            System.out.print("-");
        }
        System.out.print("]");

        for (int i = 0; i < 100; i++) {
            for (int j = 0; j <= (100-i); j++) {
                System.out.print("\b");
            }

            System.out.print(">");

            for (int j = 1; j < (100-i); j++) {
                System.out.print("-");
            }
            System.out.print("]");
            Thread.sleep(100l);

        }

    }


    // https://www.zhetao.com/fontarray.html
    static int[][] scentence = new int[][]{{0x10, 0x08, 0x08, 0xff, 0x02, 0x42, 0x22, 0x14, 0x14, 0x08, 0x08, 0x14, 0x24, 0x42, 0x82, 0x00}
    ,{0x04, 0x04, 0x04, 0xa4, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x04, 0x04, 0x14, 0x08}
    ,{0x10, 0x10, 0x10, 0x10, 0xfd, 0x10, 0x30, 0x38, 0x54, 0x50, 0x91, 0x12, 0x14, 0x10, 0x10, 0x10}
   ,{0x20, 0x20, 0x20, 0x20, 0xfe, 0x20, 0x70, 0x70, 0xa8, 0xa8, 0x24, 0x22, 0x20, 0x20, 0x20, 0x20}
    ,{0x1f, 0x10, 0x10, 0x1f, 0x10, 0x10, 0x1f, 0x00, 0xff, 0x01, 0x11, 0x11, 0x11, 0x29, 0x45, 0x83}
    ,{0xf0, 0x10, 0x10, 0xf0, 0x10, 0x10, 0xf0, 0x00, 0xfe, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xfe}
    ,{0x01, 0x01, 0x02, 0x04, 0x08, 0x10, 0x21, 0xc1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01}
    ,{0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
    ,{0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0x01, 0x01, 0x02, 0x02, 0x04, 0x04, 0x08, 0x10, 0x20, 0xc0}
    ,{0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x80, 0x80, 0x40, 0x40, 0x20, 0x10, 0x08, 0x06}
    ,{0x01, 0x41, 0x27, 0x21, 0x01, 0x87, 0x44, 0x57, 0x14, 0x27, 0xe1, 0x21, 0x2f, 0x21, 0x21, 0x01}
    ,{0x00, 0x1e, 0xd2, 0x12, 0x12, 0xde, 0x52, 0xd2, 0x52, 0xde, 0x12, 0x12, 0xd2, 0x22, 0x2a, 0x44}
    ,{0x20, 0x20, 0x7c, 0x44, 0x89, 0x7c, 0x54, 0x54, 0x7c, 0x54, 0x54, 0x7d, 0x01, 0x1e, 0xe0, 0x40}
    ,{0x50, 0x48, 0x48, 0x40, 0xfe, 0x40, 0x40, 0x7c, 0xa4, 0xa4, 0xa8, 0x28, 0x10, 0x28, 0x44, 0x82}};

//    static int[][] liu = new int[][]{{0x10, 0x08, 0x08, 0xff, 0x02, 0x42, 0x22, 0x14, 0x14, 0x08, 0x08, 0x14, 0x24, 0x42, 0x82, 0x00},{0x04, 0x04, 0x04, 0xa4, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x04, 0x04, 0x14, 0x08}};
//    static int[][] lin = new int[][]{{0x10, 0x10, 0x10, 0x10, 0xfd, 0x10, 0x30, 0x38, 0x54, 0x50, 0x91, 0x12, 0x14, 0x10, 0x10, 0x10},{0x20, 0x20, 0x20, 0x20, 0xfe, 0x20, 0x70, 0x70, 0xa8, 0xa8, 0x24, 0x22, 0x20, 0x20, 0x20, 0x20}};
//    static int[][] shi = new int[][]{{0x1f, 0x10, 0x10, 0x1f, 0x10, 0x10, 0x1f, 0x00, 0xff, 0x01, 0x11, 0x11, 0x11, 0x29, 0x45, 0x83},{0xf0, 0x10, 0x10, 0xf0, 0x10, 0x10, 0xf0, 0x00, 0xfe, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xfe}};
//    static int[][] ge = new int[][]{{0x01, 0x01, 0x02, 0x04, 0x08, 0x10, 0x21, 0xc1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01},{0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};
//    static int[][] da = new int[][]{{0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0x01, 0x01, 0x02, 0x02, 0x04, 0x04, 0x08, 0x10, 0x20, 0xc0},{0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x80, 0x80, 0x40, 0x40, 0x20, 0x10, 0x08, 0x06}};
//    static int[][] chao = new int[][]{{0x01, 0x41, 0x27, 0x21, 0x01, 0x87, 0x44, 0x57, 0x14, 0x27, 0xe1, 0x21, 0x2f, 0x21, 0x21, 0x01},{0x00, 0x1e, 0xd2, 0x12, 0x12, 0xde, 0x52, 0xd2, 0x52, 0xde, 0x12, 0x12, 0xd2, 0x22, 0x2a, 0x44}};
//    static int[][] ba = new int[][]{{0x20, 0x20, 0x7c, 0x44, 0x89, 0x7c, 0x54, 0x54, 0x7c, 0x54, 0x54, 0x7d, 0x01, 0x1e, 0xe0, 0x40},{0x50, 0x48, 0x48, 0x40, 0xfe, 0x40, 0x40, 0x7c, 0xa4, 0xa4, 0xa8, 0x28, 0x10, 0x28, 0x44, 0x82}};

    public static void printChinese(){
        int length = scentence.length/2;
        int[][][] juZi = new int[length][2][16];
        for (int i = 0; i < scentence.length; i+=2) {
            juZi[i/2] = new int[][]{scentence[i],scentence[i+1]};

        }
//        int[][][] juZi = new int[][][]{liu,lin,shi,ge,da,chao,ba};
        for (int[][] hanZiData : juZi) {
            LEDPrint.HanZi hanZi = new LEDPrint.HanZi(16);
            hanZi.initData(hanZiData).print();
            try {
                Thread.sleep(1000l);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            System.out.println("------------------");
        }

    }



}
